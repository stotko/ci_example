trigger:
- master

jobs:
- job:
  displayName: Linux
  pool:
    vmImage: 'ubuntu-18.04'

  strategy:
    matrix:
      GCC Debug:
        CC: gcc-7
        CXX: g++-7
        BuildType: debug
      GCC Release:
        CC: gcc-7
        CXX: g++-7
        BuildType: release
      Clang Debug:
        CC: clang-6.0
        CXX: clang++-6.0
        BuildType: debug
      Clang Release:
        CC: clang-6.0
        CXX: clang++-6.0
        BuildType: release

  steps:
    - task: Bash@3
      displayName: Install CMake 3.13+
      inputs:
        targetType: 'inline'
        script: |
          set -e
          sh scripts/utils/install_cmake_ubuntu1804.sh

    - task: Bash@3
      displayName: Set C/C++ compiler
      inputs:
        targetType: 'inline'
        script: |
          set -e
          sh scripts/utils/set_cxx_compiler_ubuntu.sh $(CC) $(CXX)

    - task: Bash@3
      displayName: Configure project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/utils/configure_$(BuildType).sh

    - task: Bash@3
      displayName: Build project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/build_$(BuildType).sh

    - task: Bash@3
      displayName: Run tests
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/run_tests_$(BuildType).sh

- job:
  displayName: Windows
  pool:
    vmImage: 'windows-2019'

  strategy:
    matrix:
      MSVC Debug:
        BuildType: debug
      MSVC Release:
        BuildType: release

  steps:
    - task: Bash@3
      displayName: Configure project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/utils/configure_$(BuildType).sh

    - task: Bash@3
      displayName: Build project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/build_$(BuildType).sh

    - task: Bash@3
      displayName: Run tests
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/run_tests_$(BuildType).sh

- job:
  displayName: Code Coverage
  pool:
    vmImage: 'ubuntu-18.04'

  steps:
    - task: Bash@3
      displayName: Install CMake 3.13+
      inputs:
        targetType: 'inline'
        script: |
          set -e
          sh scripts/utils/install_cmake_ubuntu1804.sh

    - task: Bash@3
      displayName: Install lcov
      inputs:
        targetType: 'inline'
        script: |
          set -e
          sh scripts/utils/install_lcov_ubuntu1804.sh

    - task: Bash@3
      displayName: Configure project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/ci/configure_lcov.sh

    - task: Bash@3
      displayName: Build project
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/build_debug.sh

    - task: Bash@3
      displayName: Run coverage
      inputs:
        targetType: 'inline'
        script: |
            set -e
            sh scripts/run_coverage.sh
